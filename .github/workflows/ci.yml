name: Build
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Test and Assembly
    runs-on: ubuntu-latest
    container:
      image: hseeberger/scala-sbt:11.0.7_1.3.12_2.13.2
    steps:
      - uses: actions/checkout@v2
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-cache-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/*') }}
      - name: Cache SBT Coursier
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('*.sbt') }}-${{ hashFiles('project/*') }}
      - name: Run tests
        run: sbt test
      - name: Assembly JAR
        run: sbt cli/assembly
      - uses: actions/upload-artifact@v2
        with:
          path: target/kprojekt-cli.jar

  release_jar:
    name: Release Jar
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ./
      - name: GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: 'artifact/kprojekt-cli.jar'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_nix:
    name: Build native images
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
    steps:
      - uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.1.0.java11'

      - name: Install GraalVM's native-image extension
        run: gu install native-image

      - uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Create native image
        run: native-image --verbose -jar ./artifact/kprojekt-cli.jar kprojekt-cli

      - name: Create tarball
        run: tar -zcvf "kprojekt-cli-${{ matrix.os }}.tar.gz" kprojekt-cli

      - name: GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: 'kprojekt-cli-${{ matrix.os }}.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
